# .github/workflows/pake-build.yml
name: Build Pake App

on:
  repository_dispatch:
    types: [build-pake-app]

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dependencies (macOS)
        run: |
          brew install node
          brew install rust
          cargo install tauri-cli

      - name: Clone Pake
        run: |
          git clone --branch V0.9.5 https://github.com/tw93/Pake.git
          cd Pake
          npm install

      - name: Modify Cargo.toml
        run: |
          cd Pake/src-tauri
          cat > Cargo.toml << 'EOL'
          [package]
          name = "app"
          version = "0.1.0"
          description = "A Tauri App"
          authors = ["you"]
          license = ""
          repository = ""
          edition = "2021"
          rust-version = "1.57"

          [build-dependencies]
          tauri-build = { version = "1.2" }

          [dependencies]
          serde_json = "1.0"
          serde = { version = "1.0", features = ["derive"] }
          tauri = { version = "1.2", features = ["api-all"] }

          [features]
          default = ["custom-protocol"]
          custom-protocol = ["tauri/custom-protocol"]
          EOL

      - name: Build App
        run: |
          cd Pake/src-tauri
          cargo build --release

      - name: Package App
        run: |
          cd Pake/src-tauri/target/release
          zip -r "../../../${{ github.event.client_payload.name }}-macos.zip" *.app || zip -r "../../../${{ github.event.client_payload.name }}-macos.zip" app

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.client_payload.name }}-macos
          path: Pake/${{ github.event.client_payload.name }}-macos.zip

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          files: Pake/${{ github.event.client_payload.name }}-macos.zip
          name: ${{ github.event.client_payload.name }}
          tag_name: release-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Supabase Status
        if: always()
        run: |
          curl -X PATCH "${{ env.SUPABASE_URL }}/rest/v1/pake_apps" \
          -H "apikey: ${{ env.SUPABASE_ANON_KEY }}" \
          -H "Content-Type: application/json" \
