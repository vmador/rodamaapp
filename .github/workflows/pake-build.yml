# .github/workflows/pake-build.yml
name: Build Pake App

on:
  repository_dispatch:
    types: [build-pake-app]

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev

      - name: Install Pake
        run: cargo install --git https://github.com/tw93/Pake.git --branch master

      - name: Build with Pake
        run: |
          pake ${{ github.event.client_payload.url }} \
          --name ${{ github.event.client_payload.name }} \
          --transparent \
          --height 800 \
          --width 1280
        
      - name: Zip Windows Build
        if: matrix.os == 'windows-latest'
        run: |
          Compress-Archive -Path dist/*.exe -DestinationPath ${{ github.event.client_payload.name }}-windows.zip

      - name: Zip macOS Build
        if: matrix.os == 'macos-latest'
        run: |
          cd dist && zip -r ../${{ github.event.client_payload.name }}-macos.zip *.app

      - name: Zip Linux Build
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist && zip -r ../${{ github.event.client_payload.name }}-linux.zip *.AppImage

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.client_payload.name }}-${{ matrix.os }}
          path: |
            ${{ github.event.client_payload.name }}-*.zip

      - name: Update Supabase Status
        if: always()
        run: |
          curl -X POST ${{ env.SUPABASE_URL }}/rest/v1/pake_apps \
          -H "apikey: ${{ env.SUPABASE_ANON_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "id": "${{ github.event.client_payload.build_id }}",
            "status": "${{ job.status == 'success' && 'completed' || 'failed' }}",
            "download_url": "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.sha }}/${{ github.event.client_payload.name }}-${{ matrix.os }}.zip"
          }'

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ github.event.client_payload.name }}-*.zip
          name: ${{ github.event.client_payload.name }}
          tag_name: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}