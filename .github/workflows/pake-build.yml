# .github/workflows/pake-build.yml
name: Build Pake App

on:
  repository_dispatch:
    types: [build-pake-app]

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Dependencies (macOS)
        run: |
          brew install node
          brew install rust
          brew install pkg-config

      - name: Clone and Setup
        run: |
          git clone https://github.com/tw93/Pake.git
          cd Pake
          npm install
          
          mkdir -p src
          mkdir -p src-tauri/icons
          
          echo "iVBORw0KGgoAAAANSUhEUgAAAgAAAAIAAQMAAADOtka5AAAAA1BMVEX///+nxBvIAAAATklEQVR42u3BMQEAAADCoPVPbQ0PoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICXAcTgAAG6EHNeAAAAAElFTkSuQmCC" | base64 -d > src-tauri/icons/icon.png
          
          cat > src/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <title>${{ github.event.client_payload.name }}</title>
              <meta http-equiv="refresh" content="0;url=${{ github.event.client_payload.url }}">
            </head>
            <body>
              <h1>Loading...</h1>
            </body>
          </html>
          EOL

      - name: Configure Build
        run: |
          cd Pake/src-tauri
          
          cat > Cargo.toml << 'EOL'
          [package]
          name = "app"
          version = "0.1.0"
          description = "A Tauri App"
          authors = ["you"]
          license = ""
          repository = ""
          edition = "2021"
          rust-version = "1.57"

          [build-dependencies]
          tauri-build = { version = "1.2" }

          [dependencies]
          tauri = { version = "1.2", features = ["api-all"] }
          serde = { version = "1.0", features = ["derive"] }
          serde_json = "1.0"

          [features]
          default = ["custom-protocol"]
          custom-protocol = ["tauri/custom-protocol"]
          EOL
          
          cat > src/main.rs << 'EOL'
          #![cfg_attr(
            all(not(debug_assertions), target_os = "windows"),
            windows_subsystem = "windows"
          )]

          fn main() {
            tauri::Builder::default()
              .run(tauri::generate_context!())
              .expect("error while running tauri application");
          }
          EOL
          
          cat > tauri.conf.json << 'EOL'
          {
            "build": {
              "beforeDevCommand": "",
              "beforeBuildCommand": "",
              "devPath": "../src",
              "distDir": "../src"
            },
            "package": {
              "productName": "${{ github.event.client_payload.name }}",
              "version": "0.1.0"
            },
            "tauri": {
              "allowlist": {
                "all": true
              },
              "bundle": {
                "active": true,
                "targets": ["dmg", "deb", "msi"],
                "identifier": "com.tauri.build",
                "icon": [
                  "icons/icon.png"
                ]
              },
              "security": {
                "csp": "default-src * 'unsafe-inline' 'unsafe-eval' data: filesystem:"
              },
              "windows": [
                {
                  "fullscreen": false,
                  "height": 800,
                  "resizable": true,
                  "title": "${{ github.event.client_payload.name }}",
                  "width": 1280,
                  "url": "${{ github.event.client_payload.url }}"
                }
              ]
            }
          }
          EOL

      - name: Build App
        run: |
          cd Pake/src-tauri
          cargo build --release

      - name: Package App
        run: |
          cd Pake/src-tauri/target/release
          zip -r "../../../${{ github.event.client_payload.name }}-macos.zip" *.app || zip -r "../../../${{ github.event.client_payload.name }}-macos.zip" app

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          files: Pake/${{ github.event.client_payload.name }}-macos.zip
          name: ${{ github.event.client_payload.name }}
          tag_name: release-${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Supabase Status
        if: always()
        run: |
          curl -X PATCH 'https://cpcvedvqzwkcswdrhvlc.supabase.co/rest/v1/pake_apps' \
            -H 'apikey: ${{ env.SUPABASE_ANON_KEY }}' \
            -H 'Content-Type: application/json' \
            -H 'Prefer: return=minimal' \
